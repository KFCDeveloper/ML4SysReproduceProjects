#
# Do not edit this file -- it gets generated from Makefile.inc.in.
# Your changes will be lost the next time ./configure is run.
#
OMNETPP_PRODUCT = @OMNETPP_PRODUCT@
OMNETPP_RELEASE = @OMNETPP_RELEASE@
OMNETPP_VERSION = @OMNETPP_VERSION@
OMNETPP_BUILDID = @OMNETPP_BUILDID@
OMNETPP_EDITION = @OMNETPP_EDITION@

#
# Directories
#
OMNETPP_ROOT = @OMNETPP_ROOT@
OMNETPP_BIN_DIR = @OMNETPP_BIN_DIR@
OMNETPP_INCL_DIR = @OMNETPP_INCL_DIR@
OMNETPP_LIB_DIR = @OMNETPP_LIB_DIR@
OMNETPP_OUT_DIR = @OMNETPP_OUT_DIR@
OMNETPP_IMAGE_PATH = @OMNETPP_IMAGE_PATH@

OMNETPP_SRC_DIR = @OMNETPP_SRC_DIR@
OMNETPP_UI_DIR = @OMNETPP_UI_DIR@
OMNETPP_UTILS_DIR = @OMNETPP_UTILS_DIR@
OMNETPP_DOC_DIR = @OMNETPP_DOC_DIR@
OMNETPP_SAMPLES_DIR = @OMNETPP_SAMPLES_DIR@
OMNETPP_TEST_DIR = @OMNETPP_TEST_DIR@

#
# Make "debug" the default mode
#
ifndef MODE
MODE = debug
endif

#
# Configname determines where (in which subdirectory of out/)
# makemake-generated makefiles create object files and other
# build artifacts.
#
ifndef CONFIGNAME
CONFIGNAME = $(TOOLCHAIN_NAME)-$(MODE)
endif

#
# Various tools and options
#
ifeq ($(MODE),debug)
CFLAGS=$(CFLAGS_DEBUG)
D=d
else
CFLAGS=$(CFLAGS_RELEASE)
D=
endif

#
# Control verbosity. Specifiying V=1 will make the build output verbose. You can use:
# $(Q) to hide commands only in quiet mode
# $(qecho) to print out something only in quite mode
# $(vecho) to print out something only in verbose mode
#
ifeq ($(V),1)
Q :=
vecho = @echo
qecho = @true
else
Q := @
vecho = @true
qecho = @echo
endif

PERL = @PERL@
YACC = @YACC@
LEX = @LEX@
CC = @CC@
CXX = @CXX@
TOOLCHAIN_NAME = @TOOLCHAIN_NAME@
CXXFLAGS = @CXXFLAGS@
CFLAGS_DEBUG = @CFLAGS_DEBUG@
CFLAGS_RELEASE = @CFLAGS_RELEASE@
LDFLAGS = @LDFLAGS@
WHOLE_ARCHIVE_ON = @WHOLE_ARCHIVE_ON@
WHOLE_ARCHIVE_OFF = @WHOLE_ARCHIVE_OFF@
AS_NEEDED_ON = @AS_NEEDED_ON@
AS_NEEDED_OFF = @AS_NEEDED_OFF@
PIC_FLAGS = @PIC_FLAGS@
MYPWD = @MYPWD@
MSGC = @MSGC@
NEDTOOL = @NEDTOOL@
AS = @AS@
AR = @AR@
RANLIB = @RANLIB@
SHLIB_LD = @SHLIB_LD@
DLLTOOL = @DLLTOOL@
STRIP = @STRIP@
WISH = @WISH@
MAKEDEPEND = @MAKEDEPEND@
LN = @LN@
MKPATH = @MKPATH@
SHLIB_POSTPROCESS = @SHLIB_POSTPROCESS@

A_LIB_SUFFIX = @A_LIB_SUFFIX@
SO_LIB_SUFFIX = @SO_LIB_SUFFIX@
DLL_LIB_SUFFIX = @DLL_LIB_SUFFIX@
JNI_LIB_SUFFIX = @JNI_LIB_SUFFIX@
EXE_SUFFIX = @EXE_SUFFIX@
LIB_PREFIX = @LIB_PREFIX@

ifeq ("$(SHARED_LIBS)", "")
SHARED_LIBS = @SHARED_LIBS@
endif

ifeq ($(BUILDING_UILIBS),yes)
SHARED_LIBS=no
OUTPUT_PREFIX=ui-
endif

SHARED_LIB_SUFFIX = @SHARED_LIB_SUFFIX@

SYSTEMC= @SYSTEMC@
NO_TCL = @NO_TCL@
HAVE_DLOPEN = @HAVE_DLOPEN@
TK_CFLAGS = @TK_CFLAGS@
TK_LIBS = @TK_LIBS@
ZLIB_CFLAGS = @ZLIB_CFLAGS@
ZLIB_LIBS = @ZLIB_LIBS@
HAVE_MPI = @HAVE_MPI@
MPI_CFLAGS = @MPI_CFLAGS@
MPI_LIBS = @MPI_LIBS@
HAVE_PCAP = @HAVE_PCAP@
PCAP_CFLAGS = @PCAP_CFLAGS@
PCAP_LIBS = @PCAP_LIBS@
HAVE_PTHREAD = @HAVE_PTHREAD@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@

XMLPARSER = @XMLPARSER@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@

AKAROA_CFLAGS = @AKAROA_CFLAGS@
AKAROA_LIBS = @AKAROA_LIBS@

TKENV_IF_POSSIBLE = @TKENV_IF_POSSIBLE@
JNILIBS_IF_POSSIBLE = @JNILIBS_IF_POSSIBLE@

EMBED_TCL_CODE = @EMBED_TCL_CODE@
OMNETPP_TKENV_DIR = @OMNETPP_TKENV_DIR@

WITH_NETBUILDER = @WITH_NETBUILDER@
WITH_PARSIM = @WITH_PARSIM@

JAVA_CFLAGS = @JAVA_CFLAGS@
JAVA_LIBS = @JAVA_LIBS@
SWIG = @SWIG@
PLATFORM = @PLATFORM@

#
# Definitions for makemake-generated makefiles
#
ALL_ENV_LIBS = @ALL_ENV_LIBS@
CMDENV_LIBS = -u _cmdenv_lib $(AS_NEEDED_OFF) -loppcmdenv$D -loppenvir$D
TKENV_LIBS = -u _tkenv_lib $(AS_NEEDED_OFF) -lopptkenv$D -loppenvir$D -lopplayout$D
KERNEL_LIBS = -loppsim$D

ifeq ($(SHARED_LIBS),yes)
  LIB_SUFFIX =  $(SHARED_LIB_SUFFIX)
else
  LIB_SUFFIX = $(A_LIB_SUFFIX)
  # extra libs we are indirectly depend on. they are needed if we are building statically
  KERNEL_LIBS += -loppnedxml$D -loppcommon$D $(XML_LIBS) 
  TKENV_LIBS += $(TK_LIBS) $(ZLIB_LIBS)

  ifeq ($(WITH_PARSIM),yes)
    ifeq ($(HAVE_MPI),yes)
      KERNEL_LIBS += $(MPI_LIBS)
    endif
  endif

  # add the Carbon framework if we are building statically on Mac OS X, because Tcl/Tk needs it
  #FIXME why not in ./configure?
  ifeq ($(PLATFORM),macosx)
    TKENV_LIBS += -framework Carbon
  endif
endif

SYS_LIBS = @SYS_LIBS@

