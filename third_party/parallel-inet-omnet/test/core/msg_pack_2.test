%description:
Tests parsimPack/parsimUnpack for generated classes

%file: test.msg

namespace @TESTNAME@;

struct Struct {
    int i;
    string s;
};

message TestMessage {
    Struct s;
    Struct sv[];
}


%includes:
#include <string.h>
#include "cfilecommbuffer.h" // from src/sim/parsim
#include "objectprinter.h"   // from src/envir
#include "test_m.h"

%activity:

// create and pack
TestMessage msg("msg");
msg.setSvArraySize(2);
msg.getS().i = 53;
msg.getS().s = "Hello";
msg.getSv(0).i = 17;
msg.getSv(0).s = "first";
msg.getSv(1).i = 26;
msg.getSv(1).s = "second";

cFileCommBuffer *buffer = new cFileCommBuffer();
msg.parsimPack(buffer);

// unpack and print
TestMessage msg2("tmp");
msg2.parsimUnpack(buffer);
ev << "isBufferEmpty:" << buffer->isBufferEmpty() << endl;

ev << ObjectPrinter(NULL, "*:declaredOn(@TESTNAME@::TestMessage)",4).printObjectToString(&msg2);

%contains: stdout
isBufferEmpty:1
class @TESTNAME@::TestMessage {
    Struct s = struct @TESTNAME@::Struct {
        int i = 53
        string s = Hello
    }
    Struct sv[0] = struct @TESTNAME@::Struct {
        int i = 17
        string s = first
    }
    Struct sv[1] = struct @TESTNAME@::Struct {
        int i = 26
        string s = second
    }
}

