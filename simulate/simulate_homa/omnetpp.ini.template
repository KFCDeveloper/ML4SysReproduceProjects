# Four configurations
# For cmdenv, use "-c <config>"
# 1. Base
# 2. RecordTraining
# 3. RecordEval
# 4. RecordAll


[General]
# Flip these to get a full packet trace
cmdenv-express-mode = true
#cmdenv-express-mode = false
#cmdenv-message-trace = true

##rng-class = "cMersenneTwister"  #default
num-rngs = 1                    #default
##seed-0-mt = 0

sim-time-limit = <SIMU_LEN>s

##**.networkLayer.arp.globalARP = true
##**.vector-recording = false

# Queue configuration
**.eth[*].queueType = "<QUEUE_TYPE>" # in routers
**.eth[*].**.frameCapacity = 100 # in routers
##**.eth[*].mac.txQueueLimit = 100000

# Shen added
###
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

**.host[*].nicLinkSpeed = ${nicLinkSpeed = 10Gbps}

**.host[*].numEchoApp = 1

**.host[*].**.rttBytes = ${RTT=0x2710} B ##10000B is the rttBytes (ie. rtt*nicLinkSpeed).
**.host[*].transportSchemeType = "${transportSchemeType = HomaTransport}"
**.host[*].transportScheme.isRoundRobinScheduler = ${isRoundRobinScheduler = false}
**.host[*].transportScheme.useUnschRateInScheduler = ${useUnschRateInScheduler = false}
**.host[*].transportScheme.maxOutstandingRecvBytes = ${maxOutstandingRecvBytes = $RTT} B
# Possible string values: STATIC_CBF_UNIFORM, STATIC_CDF_UNIFORM, STATIC_CBF_GRADUATED
**.host[*].transportScheme.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_GRADUATED}"
# Possible values 1.0/2.0, 2.0/3.0, 4.0/3.0. Lower number, mean higher priorities carry more traffic
**.host[*].transportScheme.unschedPrioUsageWeight = ${unschedPrioUsageWeight = 1}
**.host[*].transportScheme.cbfCapMsgSize = "${cbfCapMsgSize = $RTT}"
**.host[*].transportScheme.boostTailBytesPrio = "${boostTailBytesPrio = $RTT}"
**.host[*].transportScheme.defaultReqBytes = ${defaultReqBytes = 1442 }B
**.host[*].transportScheme.defaultUnschedBytes = ${defaultUnschedBytes = 7886 }B
**.host[*].transportScheme.senderScheme = "${senderScheme = SRBF}" #Possible values: OBSERVE_PKT_PRIOS, SRBF
**.host[*].transportScheme.accountForGrantTraffic = ${accountForGrantTraffic = true}
**.host[*].transportScheme.linkCheckBytes = ${linkCheckBytes = -1}B
**.host[*].transportScheme.localPort = 2222
**.host[*].transportScheme.destPort = 2222
**.eth[*].**.transportType = "HomaTransport"


[Config RecordAllStats]
**.globalListener.**.result-recording-modes = all
**.globalListener.**.vector-recording = true
#disable vector recording for all other modules
**.vector-recording = false

#WorkloadSynthesizer stats, only non templated ones are enabled
**.trafficGeneratorApp[*].sentMsg.result-recording-modes = all
**.trafficGeneratorApp[*].rcvdMsg.result-recording-modes = all
**.trafficGeneratorApp[*].msgE2EDelay.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all
**.dataQueue.queueByteLength.result-recording-modes = all
**.dataQueue.queueingTime.result-recording-modes = all
**.dataQueue.requestQueueingTime.result-recording-modes = all
**.dataQueue.grantQueueingTime.result-recording-modes = all
**.dataQueue.schedDataQueueingTime.result-recording-modes = all
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all

# Exclude every other stats from recording
**.result-recording-modes = -

result-dir = ../results/manyReceivers/comparison/linkCheckBytes__${linkCheckBytes}

[Config Base]
network = FatTree

**.configurator[*].disabled = false
**.configurator[*].addStaticRoutes = true # Needs to be true
**.configurator[*].optimizeRoutes = false
**.configurator[*].storeHostAddresses = true

#extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "MimicSynthesizer"
**.host[*].**.workloadType = "${workloadType = DCTCP}"
**.host[*].transportScheme.prioLevels = ${prioLevels = 8}
**.host[*].transportScheme.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 7}
**.host[*].transportScheme.numSendersToKeepGranted = ${numSendersToKeepGranted = 7}
**.host[*].transportScheme.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels-$adaptiveSchedPrioLevels}

include <TRAFFIC_CONFIG>

include <CLUSTER_CONFIG>

[Config RecordTraining]
extends = Base, TrainPCAPs

[Config RecordEval]
extends = Base, EvalPCAPs

[Config RecordAll]
extends = Base, TrainPCAPs, EvalPCAPs
